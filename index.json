[{"contents":"It sounds more natural in Bulgarian to:\nUse definite forms for subjects Use non-definite forms for objects when making generalising statements Example:\nwomen like cats\nжените харесват котки\nThe subject has the -те definite article and the object does not.\nReferences ","permalink":"https://www.okwilkins.dev/knowledge-system/slip-box/bulgarian-generalising-statements/","section":"knowledge-system","tags":[],"title":"Bulgarian Generalising Statements","zettelcastenIndex":"20230302090841","zettelcastenTags":["Language","Bulgarian","Bulgarian Definite Articles"]},{"contents":" Animal Животно bird птица fish риба mouse мишка snake змия cow крава goat коза horse кон pig прасе elephant слон duck патица lion лъв monkey маймуна rabbit заек spider паяк tail опашка wing крило References ","permalink":"https://www.okwilkins.dev/knowledge-system/slip-box/bulgarian-animals/","section":"knowledge-system","tags":[],"title":"Bulgarian Animals","zettelcastenIndex":"20230302084733","zettelcastenTags":["Language","Bulgarian"]},{"contents":"Животно (animal):\nplural: животни definite plural: животните Кон (horse):\nirregular plural: коне (like мъж and мъже) irregular definite form: конят for when it\u0026rsquo;s the subject of the sentence коня for when it\u0026rsquo;s the object of the sentence Заек (rabbit):\nplural: зайци References ","permalink":"https://www.okwilkins.dev/knowledge-system/slip-box/bulgarian-animals-exceptions/","section":"knowledge-system","tags":[],"title":"Bulgarian Animals Exceptions","zettelcastenIndex":"20230302084733","zettelcastenTags":["Language","Bulgarian","Bulgarian Animals","Bulgarian Definite Articles"]},{"contents":"As a general rule, masculine words ending with -к have a plural ending with -ци.\nReferences ","permalink":"https://www.okwilkins.dev/knowledge-system/slip-box/bulgarian-animals-masculine-plurals/","section":"knowledge-system","tags":[],"title":"Bulgarian Animals Masculine Plurals","zettelcastenIndex":"20230302084733-b","zettelcastenTags":["Language","Bulgarian","Bulgarian Animals"]},{"contents":"The plural of паяк (spider) is: паяци. There is an exception with the numeral plural as the the к remains: седем паяка.\nReferences ","permalink":"https://www.okwilkins.dev/knowledge-system/slip-box/bulgarian-spider-plural/","section":"knowledge-system","tags":[],"title":"Bulgarian Spider Plural","zettelcastenIndex":"20230302084733-b1","zettelcastenTags":["Language","Bulgarian","Bulgarian Animals","Numeral Plural"]},{"contents":"Mermaid uses Javascript to create diagrams and visualisations via text and code. The text and code are Markdown inspired that modify diagrams dynamically.\nReferences Mermaid#About Mermaid ","permalink":"https://www.okwilkins.dev/knowledge-system/slip-box/mermaid/","section":"knowledge-system","tags":[],"title":"Mermaid","zettelcastenIndex":"20230227123735","zettelcastenTags":["Programming"]},{"contents":"classDiagram Class01 \u0026lt;|-- AveryLongClass : Cool Class03 *-- Class04 Class05 o-- Class06 Class07 .. Class08 Class09 --\u0026gt; C2 : Where am i? Class09 --* C3 Class09 --|\u0026gt; Class07 Class07 : equals() Class07 : Object[] elementData Class01 : size() Class01 : int chimp Class01 : int gorilla Class08 \u0026lt;--\u0026gt; C2: Cool label classDiagram Class01 \u003c|-- AveryLongClass : Cool Class03 *-- Class04 Class05 o-- Class06 Class07 .. Class08 Class09 --\u003e C2 : Where am i? Class09 --* C3 Class09 --|\u003e Class07 Class07 : equals() Class07 : Object[] elementData Class01 : size() Class01 : int chimp Class01 : int gorilla Class08 \u003c--\u003e C2: Cool label References Mermaid#Class Diagrams ","permalink":"https://www.okwilkins.dev/knowledge-system/slip-box/mermaid-class-diagram/","section":"knowledge-system","tags":[],"title":"Mermaid Class Diagram","zettelcastenIndex":"20230227123735-c","zettelcastenTags":["Mermaid","Programming"]},{"contents":"erDiagram CUSTOMER ||--o{ ORDER : places ORDER ||--|{ LINE-ITEM : contains CUSTOMER }|..|{ DELIVERY-ADDRESS : uses erDiagram CUSTOMER ||--o{ ORDER : places ORDER ||--|{ LINE-ITEM : contains CUSTOMER }|..|{ DELIVERY-ADDRESS : uses References Mermaid#Entity Relationship Diagrams ","permalink":"https://www.okwilkins.dev/knowledge-system/slip-box/mermaid-entity-relationship-diagram/","section":"knowledge-system","tags":[],"title":"Mermaid Entity Relationship Diagram","zettelcastenIndex":"20230227123735-d","zettelcastenTags":["Mermaid","Programming"]},{"contents":"graph TD; A--\u0026gt;B; A--\u0026gt;C; B--\u0026gt;D; C--\u0026gt;D; graph TD; A--\u003eB; A--\u003eC; B--\u003eD; C--\u003eD; References Mermaid#Flowchart ","permalink":"https://www.okwilkins.dev/knowledge-system/slip-box/mermaid-flowchart/","section":"knowledge-system","tags":[],"title":"Mermaid Flowchart","zettelcastenIndex":"20230227123735-a","zettelcastenTags":["Mermaid"]},{"contents":"gantt dateFormat YYYY-MM-DD title Adding GANTT diagram to mermaid excludes weekdays 2014-01-10 section A section Completed task :done, des1, 2014-01-06,2014-01-08 Active task :active, des2, 2014-01-09, 3d Future task : des3, after des2, 5d Future task2 : des4, after des3, 5d gantt dateFormat YYYY-MM-DD title Adding GANTT diagram to mermaid excludes weekdays 2014-01-10 section A section Completed task :done, des1, 2014-01-06,2014-01-08 Active task :active, des2, 2014-01-09, 3d Future task : des3, after des2, 5d Future task2 : des4, after des3, 5d References Mermaid#Gantt Charts ","permalink":"https://www.okwilkins.dev/knowledge-system/slip-box/mermaid-gantt-chart/","section":"knowledge-system","tags":[],"title":"Mermaid Gantt Chart","zettelcastenIndex":"20230227123735-g","zettelcastenTags":["Mermaid"]},{"contents":"gitGraph commit commit branch develop commit commit commit checkout main commit commit gitGraph commit commit branch develop commit commit commit checkout main commit commit References Mermaid#Gitgraph Diagrams ","permalink":"https://www.okwilkins.dev/knowledge-system/slip-box/mermaid-gitgraph-diagram/","section":"knowledge-system","tags":[],"title":"Mermaid Gitgraph Diagram","zettelcastenIndex":"20230227123735-i","zettelcastenTags":["Mermaid","Programming"]},{"contents":"mindmap root((mindmap)) Origins Long history ::icon(fa fa-book) Popularisation British popular psychology author Tony Buzan Research On effectiveness\u0026lt;br/\u0026gt;and features On Automatic creation Uses Creative techniques Strategic planning Argument mapping Tools Pen and paper Mermaid mindmap root((mindmap)) Origins Long history ::icon(fa fa-book) Popularisation British popular psychology author Tony Buzan Research On effectivenessand features On Automatic creation Uses Creative techniques Strategic planning Argument mapping Tools Pen and paper Mermaid References Mermaid#Mindmap ","permalink":"https://www.okwilkins.dev/knowledge-system/slip-box/mermaid-mindmap/","section":"knowledge-system","tags":[],"title":"Mermaid Mindmap","zettelcastenIndex":"20230227123735-j","zettelcastenTags":["Mermaid"]},{"contents":" Start with pie keyword to begin the diagram showData to render the actual data values after the legend text. This is OPTIONAL Followed by title keyword and its value in string to give a title to the pie-chart. This is OPTIONAL Followed by dataSet. Pie slices will be ordered clockwise in the same order as the labels. label for a section in the pie diagram within \u0026quot; \u0026quot; quotes. Followed by : colon as separator Followed by positive numeric value (supported up to two decimal places) pie showData title Key elements in Product X \u0026#34;Calcium\u0026#34; : 42.96 \u0026#34;Potassium\u0026#34; : 50.05 \u0026#34;Magnesium\u0026#34; : 10.01 \u0026#34;Iron\u0026#34; : 5 pie showData title Key elements in Product X \"Calcium\" : 42.96 \"Potassium\" : 50.05 \"Magnesium\" : 10.01 \"Iron\" : 5 References Mermaid#Pie Charts ","permalink":"https://www.okwilkins.dev/knowledge-system/slip-box/mermaid-pie-chart/","section":"knowledge-system","tags":[],"title":"Mermaid Pie Chart","zettelcastenIndex":"20230227123735-h","zettelcastenTags":["Mermaid"]},{"contents":"sequenceDiagram participant Alice participant Bob Alice-\u0026gt;\u0026gt;John: Hello John, how are you? loop Healthcheck John-\u0026gt;\u0026gt;John: Fight against hypochondria end Note right of John: Rational thoughts \u0026lt;br/\u0026gt;prevail! John--\u0026gt;\u0026gt;Alice: Great! John-\u0026gt;\u0026gt;Bob: How about you? Bob--\u0026gt;\u0026gt;John: Jolly good! sequenceDiagram participant Alice participant Bob Alice-\u003e\u003eJohn: Hello John, how are you? loop Healthcheck John-\u003e\u003eJohn: Fight against hypochondria end Note right of John: Rational thoughts prevail! John--\u003e\u003eAlice: Great! John-\u003e\u003eBob: How about you? Bob--\u003e\u003eJohn: Jolly good! References Mermaid#Sequence Diagrams ","permalink":"https://www.okwilkins.dev/knowledge-system/slip-box/mermaid-sequence-diagram/","section":"knowledge-system","tags":[],"title":"Mermaid Sequence Diagram","zettelcastenIndex":"20230227123735-b","zettelcastenTags":["Mermaid"]},{"contents":"stateDiagram [*] --\u0026gt; Still Still --\u0026gt; [*] Still --\u0026gt; Moving Moving --\u0026gt; Still Moving --\u0026gt; Crash Crash --\u0026gt; [*] stateDiagram [*] --\u003e Still Still --\u003e [*] Still --\u003e Moving Moving --\u003e Still Moving --\u003e Crash Crash --\u003e [*] References Mermaid#State Diagrams ","permalink":"https://www.okwilkins.dev/knowledge-system/slip-box/mermaid-state-diagram/","section":"knowledge-system","tags":[],"title":"Mermaid State Diagram","zettelcastenIndex":"20230227123735-c","zettelcastenTags":["Mermaid"]},{"contents":"timeline title History of Social Media Platform 2002 : LinkedIn 2004 : Facebook : Google 2005 : Youtube 2006 : Twitter timeline title History of Social Media Platform 2002 : LinkedIn 2004 : Facebook : Google 2005 : Youtube 2006 : Twitter References ","permalink":"https://www.okwilkins.dev/knowledge-system/slip-box/mermaid-timeline-diagram/","section":"knowledge-system","tags":[],"title":"Mermaid Timeline Diagram","zettelcastenIndex":"20230227123735-k","zettelcastenTags":["Mermaid"]},{"contents":"journey title My working day section Go to work Make tea: 5: Me Go upstairs: 3: Me Do work: 1: Me, Cat section Go home Go downstairs: 5: Me Sit down: 5: Me journey title My working day section Go to work Make tea: 5: Me Go upstairs: 3: Me Do work: 1: Me, Cat section Go home Go downstairs: 5: Me Sit down: 5: Me References Mermaid#User Journey Diagrams ","permalink":"https://www.okwilkins.dev/knowledge-system/slip-box/mermaid-user-journey-diagram/","section":"knowledge-system","tags":[],"title":"Mermaid User Journey Diagram","zettelcastenIndex":"20230227123735-f","zettelcastenTags":["Mermaid"]},{"contents":"A decision tree is a tree of statements and with decisions based on whether or not the statement is true or false.\nflowchart TD A[A person wants to learn about decision trees] A --\u003e |True| B[Check out these sequence of notes!] A --\u003e |False| C[Go somewhere else then!] If the statement is true then you go left and vice versa.\nReferences StatQuest with Josh Starmer \u0026gt; Decision Trees ","permalink":"https://www.okwilkins.dev/knowledge-system/slip-box/decision-trees/","section":"knowledge-system","tags":[],"title":"Decision Trees","zettelcastenIndex":"20230227115732","zettelcastenTags":["Data Science"]},{"contents":"The difference in how well a model fits differing datasets is called variance.\nReferences StatQuest with Josh Starmer \u0026gt; Variance ","permalink":"https://www.okwilkins.dev/knowledge-system/slip-box/machine-learning-variance/","section":"knowledge-system","tags":[],"title":"Machine Learning Variance","zettelcastenIndex":"20230227115217","zettelcastenTags":["Data Science"]},{"contents":"The inability for a machine learning model to capture the true relationship of a pair of variables is called bias.\nReferences StatQuest with Josh Starmer \u0026gt; Bias ","permalink":"https://www.okwilkins.dev/knowledge-system/slip-box/machine-learning-bias/","section":"knowledge-system","tags":[],"title":"Machine Learning Bias","zettelcastenIndex":"20230227113326","zettelcastenTags":["Data Science"]},{"contents":"In English, a specific cat would be referred by the following: the cat. In Bulgarian, a definite article is attached to the end of a noun:\nКотка - a cat\nКотката - the cat\nThe article will vary depending on the gender and ending of word:\nEnding Article Examples Masculine nouns -ът/-а* мъж ➜ мъжът / мъжа* Feminine nouns -та котка ➜ котката, нощ ➜ нощта Neuter nouns -то кафе ➜ кафето Plural nouns ending in -а or -я -та кафета ➜ кафетата All other plural nouns -те градове ➜ градовете References ","permalink":"https://www.okwilkins.dev/knowledge-system/slip-box/bulgarian-definite-articles/","section":"knowledge-system","tags":[],"title":"Bulgarian Definite Articles","zettelcastenIndex":"20230227102234","zettelcastenTags":["Language","Bulgarian","Definite Article","Bulgarian Articles"]},{"contents":"There are two different definite articles for masculine words. Words ending in a constant will use the -ът article when they are the subject of the sentence. Words will end with -а when they are the object.\nExamples:\n\u0026ldquo;Мъжът говори\u0026rdquo; - The man is talking\n\u0026ldquo;Аз говоря с мъжа\u0026rdquo; - I\u0026rsquo;m talking with the man\nReferences ","permalink":"https://www.okwilkins.dev/knowledge-system/slip-box/bulgarian-masculine-definite-articles/","section":"knowledge-system","tags":[],"title":"Bulgarian Masculine Definite Articles","zettelcastenIndex":"20230227102234-a","zettelcastenTags":["Language","Bulgarian","Definite Article","Bulgarian Articles","Bulgarian Definite Articles"]},{"contents":"General Linear Models\nhttps://www.youtube.com/watch?v=nk2CQITm_eo https://www.youtube.com/watch?v=zITIFTsivN8 https://www.youtube.com/watch?v=NF5_btOaCig (Linear Models for T-Tests and ANOVA) https://youtu.be/2UYx-qjJGSs Least Squares Linear Regression\nhttps://www.youtube.com/watch?v=PaFPbb66DxQ Odds and Log(Odds)\nhttps://www.youtube.com/watch?v=ARfXDSkQf1Y https://www.youtube.com/watch?v=8nm0G-1uJzA Maximum Likelihood\nhttps://www.youtube.com/watch?v=XepXtl9YKwc Logistic Regression\nhttps://www.youtube.com/watch?v=yIYKR4sgzI8 https://www.youtube.com/watch?v=vN5cNN2-HW https://www.youtube.com/watch?v=BfKanl1aSG0 Decision Trees\nhttps://www.youtube.com/watch?v=_L39rN6gz7 https://www.youtube.com/watch?v=g9c66TUylZ4 https://www.youtube.com/watch?v=D0efHEJsfHo Random Forests\nhttps://www.youtube.com/watch?v=J4Wdy0Wc_xQ AdaBoost\nhttps://www.youtube.com/watch?v=LsK-xG1cLYA Gradient Boosting\nhttps://www.youtube.com/watch?v=3CC4N4z3GJ https://www.youtube.com/watch?v=2xudPOBz-vs https://www.youtube.com/watch?v=jxuNLH5dXCs https://www.youtube.com/watch?v=StWY5QWMXCw Regularization\nhttps://www.youtube.com/watch?v=Q81RR3yKn30 https://www.youtube.com/watch?v=NGf0voTMlcs XGBoost\nhttps://www.youtube.com/watch?v=OtD8wVaFm6E https://www.youtube.com/watch?v=8b1JEDvenQU https://www.youtube.com/watch?v=ZVFeW798-2I https://www.youtube.com/watch?v=oRrKeUCEb Decision Trees Basic Concepts milti data type ok a question on a feature can be asked multiple times numerica thresholds can be diff for the same feature final classificaitons can be repeated if statement is true, you go left very top of tree is called root node/the root internal nodes/branches are inbetween top and bottom branches have arrows pointing to them AND arrows pointing away from them leaves have arrows pointing to them but no pointing away Building a Tree with Gini Impurity First need to work out which feature makes the root do this based off which best predicts target var do this by making tree based off only \u0026ldquo;loves popcorn\u0026rdquo; to predict \u0026ldquo;Loves Song\u0026rdquo; If a leaf contains a mixture of correct AND incorrect predictions, then they are IMPURE To quantify the impurity of leaves you can use: Gini Impurity, Entropy, and Information Gain Gini Impurity for a leaf = 1 - (prob(\u0026ldquo;yes\u0026rdquo;) ^ 2 - prob(\u0026ldquo;no\u0026rdquo;) ^ 2) to work out toal gini impurity fpr the simple tree: = weigthed avg of gini impurities weigthed because a leaf may not represent the same number of people eg \u0026ldquo;loves popcorn? Yes? No?\u0026rdquo; For numeric data: sort by low to high calc avg value based of row below and current row then calc gini for each avg value this can be done e.g. avg val = 9.5 root: \u0026ldquo;age \u0026lt; 9.5, loves song?\u0026rdquo; You then pick the root that represents num feature by the avg that = lowest gini You then pick the root by selecting the feature that has lowest gini! So split based off: \u0026ldquo;loves soda?\u0026rdquo; Can we reduce gini of branch by splitting people that loved soda or Age \u0026lt; ??? ? Calc gini for each of the two questions Select lowest gini of the two: \u0026ldquo;age \u0026lt; 12.5?\u0026rdquo; Can stop splitting based off if leaves are completly pure How to Prevent Overfitting Let say that leaf only has one person, can be hard to be sure that it does a good job of making preds could overfit the data Can deal with this by: pruning can put limits on hwo trees grow by requiring 3 or more people per leaf Regression Trees use when you cant fit straight line to data to work out output of leaf, just get avg of the values that sit in the leaf building root: dosage \u0026lt; 3 \u0026ndash; 3 is avg of two values get avg of vals of \u0026lt; 3 and \u0026gt;= 3 (0 \u0026amp; 38.8) so tree will say: \u0026ldquo;Dosage \u0026lt; 3? If so, then 0, else 38.8.\u0026rdquo; use sum of square residuals of all points (left and right) in the leaves to get qual of preds THEN, go to next two points e.g. \u0026ldquo;dosage \u0026lt; 5\u0026rdquo; Select smallest sum of squared residuals root = \u0026ldquo;dosage \u0026lt; 14.5?\u0026rdquo; You then for the left and right branch can do the same again on the samller subset of values you then need to do this for the other features in data compare SSR for each feature that makes the root node to the branch down, you just do the same as before but it\u0026rsquo;s filtered on e.g. \u0026ldquo;Age \u0026gt; 50\u0026rdquo; How to Prune Regression Trees there are several methods of prunin this is on Cost Complexity Pruning or Weakest Link Pruning use this for overfitting and variance let say we have test/train data and the model is overfit to test data\none way to reduce overfitting is by reducing the number of leaves replace the split with a leaf that is avg of a larger num of observations e.g. remove two leaves of branch and replace branch by leaf now the sub-tree does better at predicting test data but worse at train how do we decide which sub-tree to use???\nfirst tep of cost complex pruning is to calc SSR of each pruned sub-tree for trian data\ncalc SSR for each leaf\nthen add up all SSR for all leaves\neach time a branch/leaf is removed, the SSR for the sub-tree will get bigger\nnot a suprise tho ofc\nhow comapre trees?\nCCP based on:\ntree score = SSR + alpha (tree complexity pen, find using cross validation) * T (num of leaves or terminal nodes)\ndo this for all sub-trees\npick lowest tree score sub-tree\nhow to build pruned regression tree?\nfirst use ALL data build full sized reg tree\nnow increase alpha till the sub-tree with one branch removed, gives lower tree score compared to full sized tree\nkeep doing this with smaller and smaller sub-trees\nrecording alpha values for each\nin the end, different vals for alpha give use a sequence of tree from full sized to just a leaf\ne.g. 0, 10k, 15k, 22k\nnow divide into train and test\nusing just train data, use the alpha values we found on full tree and a sequaence of subtrees that min the tree score\nnow calc SSR of each new tree for test data and pick alpha based off lowest SSR\nrepeat using cross-validation\npick alpha that on avg gave lowest SSR with the testing data in each cross fold\nRandom Forests Step 1: Create a \u0026ldquo;bootstrapped\u0026rdquo; dataset\nRandomly sample dataset so that we have same size as orginal dataset can pick same sample more than once Step 2: Create decision tree using boostrapped dataset but only use a random subset of features at each step\ne.g. only consider 2 cols at each step\nthere can be an optimal num of cols\nonce root has been determined out of 2 cols, remove that col from data to focus on ALL of the remaining cols\nfor next branch, randomly select 2 cols of the remaining cols\nin the next levels of branches, you can select the col that was removed for the parent node\nNow go back to step 1 and repeat bootstrap and build tree again\nHow to use forest?\nall trees vote and pick answer based off all the trees, 5 Trues and 1 False = True classification Boostrapping the data plus the aggregate to make a decision is called Bagging\nWe can have Out-Of-Bag-Dataset, which are all the samples that did not make it into the bootstrapped data\ntypically 1/3 of og data doesn\u0026rsquo;t make it run data through tree and check if it estimate correct do this out-of-bag sample through all of the other trees that were built without it do the same thing for all of the other out of bag samples for all of the trees The proportion of out-of-bag samples that were incorrectly calssifies is the Out-Of-Bag Error\nTo tune the number of cols selected for each step, use Out-of-bag error\nAdaboost Trees are usually just a root and two leaves\nThis is called a stump They are not great at making accurate classifications \u0026ldquo;weak learners\u0026rdquo; In a forest of stumps, some stumps get more say in final classification than others\nthis is in contrast with RF Order is important\nThe error that the first stump makes, influences how the second stump is made, etc etc In RF the trees are independently generated First give each row in dataset a sample weight\nTo begin with, this will be 1 / N Then create root node in the same way as a decision tree\nThe the total error will determine the amount of say a stump has:\namount of say = 0.5 * log((1 - total error) / total error) if total error = 0.5, say = 0 if total error apporaches -1 (you would just do opposite of what tree says) or 1, say increases if total error = 1, the equation freaks out (log(0)), so a small error term is added to correct for this To update the rows that the stump incorrectly guesses:\nnew sample weight = sample weight * e ^ (amount of say) So if stump has a lot of say and gets guess wrong, sample weight will drastically increase If the stump gets the guess correct, update the sample weight:\nnew sample weight = sample weight * e ^ -(amount of say) if amount of say is large, then the row weight will go down a lot After all weights have been updated, you need to nomalise the weights so that they add up to 1\ndo this by dividing each weight by the sum of the weights In theory, the new sample weights could be used to calc a weighted gini index for a new tree\nIn practice, you generate rng nums between 0 and 1, selecting the row that it falls on base don the cum sample weights\nDo this as many times as you want!\nHow do the trees make predicition?\nAdd up the amount of say of each True and False preds The one with more total say will be the pred Least Squares Linear Regression Draw line through data Sum pred - obvs for all points Square each term in sum to negatate large obvs vs pred This is sum of squared residuals $y = ax + b$ We want to find the optimal vaues for a and b so that the sum of squared residuals is minimised Since we want the line that will give us the smallest sum of squares, this is called least squares\nPlot graph of roration of line vs SSR and take derivative of the function Best point is where the derivative is 0\nLinear Regression Main ideas:\nUse least-squares to fit a line to the data Calculate $R^2$ Calculate a p-value for $R^2$ Look above for notes on least-squares\n$R^2$: Example:\nFirst shift all data to y-axis We are only interested in y-axis feature Then calculate avg. y data Sum the squared resdiduals We call this SS(mean) -\u0026gt; \u0026ldquo;sum of squares around the mean\u0026rdquo; SS(mean) = (data - mean)^2 Variation around the mean = (data - mean) ^ 2 / n Var(mean) = SS(mean) / n We can think of variance as the average sum of squares per e.g. \u0026ldquo;mouse\u0026rdquo; Now apply this to the line of best fit:\nSS(fit) = (data - line) ^ 2 Var(fit) = SS(fit) / n Can think of Var(fit) as the avg SS(fit) for each mouse In general: Variance(something) = sum of squares / the number of those things = average sum of squares\nThere is less variation around the line that we fit by least-squares\nWe can say that some for the variation in mouse size is \u0026ldquo;explained\u0026rdquo; by taking mouse weight into account So $R^2$ tells up how much of the variation in mouse size can be explained by taking mouse weight into account.\n$R^2 = \\frac{Var(mean) - Var(fit)}{Var(mean)}$\nExample: $R^2$ = 0.6 = 60%: \u0026ldquo;There is a 60% reduction in variance when we take the mouse weight into account\u0026rdquo; or \u0026ldquo;mouse weight explains 60% of the variation in mouse size\u0026rdquo;.\nYou can also use the sums of squares to make the same calc: $R^2 = \\frac{SS(mean) - SS(fit)}{SS(mean)}$\nAdding terms will never reduce $R^2$! This is because lesat-sqaures would make the offending term(s) go to 0\nCause any term that makes SS(fit) worse to be multiplied by 0 However, the more stupid paramters added to the equation, the more chance there for random events to result in a better $R^2$ Because of this, people report an \u0026ldquo;adjusted\u0026rdquo; $R^2$ value that in essence, scales R^2 by the number of parameters What if we had only 2 measurements however?\nSS(fit) = 0 =\u0026gt; R^2 = 100% Any two random points would give exact same thing, doesnt mean anything So need a stats test to prove it\u0026rsquo;s significant The p-value for R^2 comes from something called F:\nTells you how reliable the fit is! F = the variation explained by the extra parameters in the fit / the variation not explained by the extra parameters in the fit $F = \\frac{SS(mean) - SS(fit) / (p_{fit} - p_{mean})}{SS(fit) / (n - p_{fit})}$ p are the degrees of freedom Why divide SS(fit) by $n - p_{fit}$ instead of just n? The more params you have in your equation, the more data you need to estimate them For example, you only need two points to estimate a line, but you need 3 points to estimate a plane If the fit is good F = large num / small num To calc p-value:\nYou could gen histogram from lots of random datasets and then see where you f-score for the dataset sits What is more common is to generate an F-dstribution based off a line: $(p_{mean} - p_{fit}) = 1$, $(n - p_{fit}) = 10$ the number of degrees of freedom determines the shape of the line Maximum Likelihood The goal of maximum likelihood is the find the optimal way to fit a distribution to the data.\nExample:\nTake normal distribution fit a bell curve with centre far from avg of points most of the points have a low probability or \u0026ldquo;likelihood\u0026rdquo; of being observed in the places they are if you shift the curve over so that its mean was the same as the average? the likelihood of observing the points would be high if you kept moving it over, the likelihood of observing the points would be low again with the best mean found, you need to do the same for std. dev. probability vs likelihood:\nlikelihood specifically refers to this situation here; you are trying to find the optimal value for the mean or std dev for a dist given a bunch of observed measurements Odds and Log(Odds) \u0026ldquo;The odds in favour of my team winning the game are 1 to 4\u0026rdquo;\nodds are not probability\nthey are the ratio of something happening vs to something not happening prob is the ratio of something happening vs everything happening prob of something / prob of not something is the same as the odds\nodds of team losing go from 0 to 1 (1 : 32 =\u0026gt; 0.03125) odds of team winning go from 1 to $\\infty$ (32 : 3 =\u0026gt; 10.67) this makes it difficult to compare the odds of winning vs losing taking the log of the odds helps with this the log of the ratio of probs is called the logit function and formthe basis for logistic regression\nlog(odds) are very useful for solving certain stats problems\nspecifically ones where we are trying to determin probs about win/lose, yes/no or true/false questions plotting dist of win : lose of many things will result in normal dist Has Cancer/Has mutated gene Yes No Yes 23 117 No 6 210 Odds ratio: $\\frac{23 / 117}{6 / 210} = \\frac{0.2}{0.03} = 6.88$ This means that the odds are 6.88 times greater that someone with the mutated gene will also have cancer Hence log ratio: $1.93$\nThe odds ratio and log of the odds ratio are like R-squared; they indicate a relationship between two things Larger values mean that the mutated gene is a good predictor of cancer Values close to 0 are bad: $log(1) = 0$ $log(0.001) = -6.91$ (so do opposite) (for every game I win someone else wins 1,000 times) $log(100) = 4.6$ (for every game I lose, I win 100) hence these are good predictors 3 ways to determine if an odds ratio is statistically signficant:\nFisher\u0026rsquo;s Exact Test Chi-Square Test The Wald test No consensus on what is best, so people just mix and match: Some people use Fisher\u0026rsquo;s/Chi-Square test to get p-values Wald Test to calculate a confidence interval Others use just Wald Test for confidence interval/p-values So need to check what is best for your field Logistic Regression Predicts if something is True or False Fits an S shaped logistic function Test to see if a variable\u0026rsquo;s effect on the prediction is significantly different from 0 If not, it means the variable isnot helping the prediction This is called Wald\u0026rsquo;s test Instead of using SSR and R^2 it uses maximum likelihood Logistic Regression is a specific type of Generalised Linear Model (GLM) Continuous values: Because with logistic regression, the y-axis is confined to probability values between 0 and 1\nsolve problem by transforming to the log odds, so like with linear regression the y-axis can go from $-\\infty$ to $+\\infty$ So we use the logit function: $\\log{\\frac{p}{1 - p}}$\nSo all values that are true (1) -\u0026gt; $\\infty$ All values that are false (0) -\u0026gt; $-\\infty$ Take example logisitic regression line: $y = -3.48 + 1.83\\times weight$ So the first coefficient is the y-axis intercept\nwhen weight (x-axis) = 0, then log(odds of obesity) = -3.476 In other words, if you dont weigh anything, the odds are against you being obese!! Duh! The slope: for every one unit of weight gains, the log(odds of obesity) increases by 1.825 Descrete variable:\nNeed to come back to this (2nd vid for logistic regression)\nLinear Models for T-Tests and ANOVA Need to come back to this\nGradient Descent Can be used to optimise least squares like in notes above! For: $y = ax + b$ start with least squares estimate for the slope a we use gradient descent to find optimatal value for b\nset b = 0, any number will do calc SSR\nNOTE: the SSR is a type of loss function Keep changing the intercept and plot a graph of intercept vs SSR\nInefficent way of doing this would be to calc lots and lots of points Gradient descent makes this way more efficent Does a few calcs when far from the optimal solution increases the number of calcs, close to the optimal value You can derive an equation for a line that describes the SSR Determine derivative of the function Then take steps towards min value approaches derivative = 0 This is v useful because get around times where it\u0026rsquo;s impossible for derivative = 0 The size of the step should be dependant on the size of the derivative This is determined by a step size called the Mutiply the derivative by a small number called a learning rate, the combination of these two is the step size So in this case, the new intercept = old intercept - step size This process repeats itself It will stop when the step size is very close to 0 How to do grad descent for both a and b?\nTake derivative with respect to the intercept also do the same with respect to the slope When you have 2 or more derivatives of the same function, they are called a gradient This is why the algorithm is called gradient descent! Pick rando number for intecept and slope Gives 2 SSRs Calc step size for both Adjust intercept and slope by step size In general:\nTake the derivative of the Loss Function for each parameter in it. Meaning take the Gradient of the Loss Function. Pick rando values for all parameters. Plug param values into the gradient Calc step size calculate new params Go back to step 3 and repeat till step size small or max num of steps reached For a lot of data points, this can take long time So, stochastic gradient descent that uses a rando selected subset of the data at every step, rather than the full dataset\nGradient Boosting: Regression Main Ideas Grad boost very similar to AdaBoost\nWhen starting, grad boost creates a single leaf that is the avg of the target var Then grad bost builds a tree, that is based on the errors of the previous tree.\nThis tree is larger than stump but still restricts the size of the tree In practice, people ofen set the num of leaves to be between 8 and 32 Grad boost will scale each tree by a fixed amount, unlike AdaBoost (amount of say) It will then build tree based of the errors of the previous tree. It will then build trees in this fashon till made num of trees asked for or aditional trees fail to improve fit.\nCalc avg of the target feature as first \u0026rsquo;tree\u0026rsquo;/leaf Better way: $F_{0}(x) = \\arg \\max_{\\gamma}\\sum_{i=1}^{n}L(y_{i}, \\gamma)$, $L$ is loss func Either find best value via grad descent or if ez derivative to solve for 0, do that Build tree on errors of first tree: error = obvs - pred, this is called a pseudo residual. The pseudo part is a reminder that we are doing grad boost, not linear reg. Now use input vars to predict the residuals to build tree. A leaf of this tree may pointwards two residuals. If this happens, get avg of residuals on leaf. Now combine original leaf with the new tree for pred. Effectively this new tree \u0026lsquo;corrects\u0026rsquo; for the error of the og leaf. After doing this once, the bias will be low but varience high (overfit), so there is a learning rate to correct for this. Multiple learning rate by new tree\u0026rsquo;s residual pred. Between 0 and 1. This results in a small step in the right direction. Taking lots of small steps in the right direction results in lower varience. Calc psuedo residuals again based of new preds and do the same. Keep doing this until num trees reached or the sum of residuals do not significantly decrease. Gradient boost is called gradient boost because the residual is the Gradient that comes from Gradient descent.\nGradient Boost: Classification Main Ideas Need to come back to this!\nRegularization: Ridge (L2) Regression Another way of saying desensitisation (lol) Use Linear regression aka least squares:\nexample: has intercept and slope training data has 2 points testing has 8 SSR = 0 for training, for testing is high high varience (overfit to training) Main idea behind ridge regression is to find a new line that doesn\u0026rsquo;t fit the training data as well introduce a small amount of bias in return we get a significant drop in variance Example: size = intercept + slope * Weight Lin reg minises: SSR Ridge regression tries to minimises: SSR + $\\lambda \\times {slope}^2$\nThe added tern adds a penalty to the traditional least squares method So when the slope of the line is steep, then the prediction for size is very sensitive to relatively small changes in weight So predictions made with the ridge regression line are less sensistive to weight than the least squares line The large lambda, the slope get asymptotically close to 0 To find the value for lambda, try typically 10-fold cross validation to determine which one results in the lowest variance\nAlso works on descrete data: size = 1.5 + 0.7 * high fat diet\nso ridge regression minimises: SSR + $\\lambda \\times {diet difference}^2$\ndiet difference refers to the distance in size between normal diet and high far diet for more complex model: size = intercept + slope * weight + diet difference * high fat diet so penalty term is: lambda * (slope ^ 2 + diet difference ^ 2)\nso in general, the penalty term will apply itself to every parameter, except for the intercept, is scaled by the measurements\nyou cant make a line with one data point nor a plane with 2 data points\nyou would need at least 10,001 data points to make an equation of 10,001 parameters, sometimes that\u0026rsquo;s not possible what do you do here? use ridge regression!\nThe penalty can solve for all 10,001 params with 500 samples or fewer Regularization: Lasso (L1) Regression Very similar to ridge regression but has some important differences Intead the penalty is: $\\lambda \\times |slope|$\nadds a bit of bias but less variarience than leat squares The big difference is that L1 can make the slope go to 0\nRidge can only do this asymptotically This can eleminate any terms in an equation that are stupid to 0\nSo lasso does better when there are lots of useless parameters Ridge does better then most of the variables are useful\nXGBoost: Regression Has lots of parts but are simple:\nGradient boost(ish) (wont be covered as done before) Regularization (wont be covered as done before) A unique regression tree Approximate greedy algorithm Weighted quantile sketch Sparsity-aware split finding Parallel learning Cache-aware access Blocks for out-of-core computation XGBoost was designed to be used with large, complicated datasets\nUnique Regression Tree First step in fitting XGBoost to the training data is to make an initial prediction\nThis prediction can be anything but by default it is 0.5, regardless if it\u0026rsquo;s regression or classification Like with gradient boost, XGBoost fits a regression tree to the residuals\nHowever, XGBoost uses a unique regression tree that the vid calls XGBoost tree There are many ways this tree can be built, but this is the most common way for regression Each tree starts with a single leaf, all residuals go to the leaf Calculate a quality score or similarity score for the residuals Similarity score = SSR / (num residuals + $\\lambda$) This similarity score is a simplification of second order Taylor approximation of the loss function described in grad boost Also, the lambda here will just be for L2 regularisation L1 will make the sim score simplify to something different Now the question is whether or not we can do a better job clustering similar residuals if we split them into two groups Focus on the two points that are smallest (x-axis) Get avg value Make a split based off the avg value Calc similarity score for both leafs Now need to quanitify how much better the leaves cluster similar resdiuals than the root, do this by calculating the gain $gain = left_{similarity} + right_{similarity} - root_{similarity}$ Now shift the threshold over so that it is the avg of th next two observation More gain is good, is better at splitting the residuals into clusters of similar values Get best tree based of thresholds Try to split leaves further, the root in the gain calc refers to the parent node of the leaves Keep going till at max depth (default is 6) How to prune this tree?\nPruned based on its gain values Start with a number, for example, 130 This is called $\\gamma$ gamma Then calc the difference between the gain asscociated with the lowest branch in the tree and gamma: $gain - \\gamma$ if the difference is positive then the branch is not removed, if it is neg then remove once you find a pos difference, then stop pruning This can also remove the root of the tree, leaving just the original prediction, which is pretty extreme pruning The regularization term:\nThis will decrease similarity scores This will tend to stop the trees getting so large as it\u0026rsquo;s harder for a branch to have a lower sim score than its parent This also can make the pruning more agressive as $\\gamma$ is more likely to be larger than the gain In the case of gain being less than 0, setting gamma = 0 will not turn off pruning Output value = sum of residuals / (num of residuals + $\\lambda$)\nThis refers to the output value for each leaf Pretty similar to the similarity score except it\u0026rsquo;s not SSR This also means that lambda will reduce the amount a leaf will contribute to a prediction So will reduce the sensistivity to an indivual observation Like with gradient boost, there is a learning rate that scales the tree\nXGboost calls this learning rate: $\\epsilon$ (eta but this is epsilon?) Default value is 0.3 So output = inital pred + learning rate * output value for the leaf that the point goes down to\nNow build new tree based on the new residuals\nThe two reasons to use XGBoost are also the two goals of the project:\nExecution Speed Model Performance Sparse Aware: implementation with automatic handling of missing data values. Block Structure: to support the parallelization of tree construction. Continued Training: so that you can further boost an already fitted model on new data.\nApproximate Greedy Algorithm When fitting a tree to the residuals\nwas done by calculating the similarity scores and the gain for each possible threshold the threshold with the largest gain is the one XGBoost uses The decision to use the threshold that gives the largest gain is made without worrying about how the leaves will be split later This means XGBoost uses a greedy algorithm In other words, since XGBoost uses a greedy algorithm, it amkes a decision without looking ahead to see if it is the absolute best choice in the long term If it did not use this algo, it woukld postpone making a final decision about this threhold, until after trying different thresholds in the leaves to see how things played out in the long run So, the greedy algo makes XGBoost a tree relatively quickly When you have lots of data points, the greedy algo still has to look through every possible threshold\non top of that, you\u0026rsquo;d have to do this for every other feature in your data this would take forever this is where the approximate greedy algo comes in Instead, divide the data into quantiles and use that for thresholds instead By default, XGBoost uses \u0026ldquo;about\u0026rdquo; 33 quantiles\nThe \u0026ldquo;about\u0026rdquo; comes from the Parallel Learning an Weighted Quantile Sketch Parallel Learning \u0026amp; Weighted Quantile Sketch Get your data and split it into small pieces and putting the peices on different computers on a network The quantile sketch algorithm combines the alues form each computer to make an approximate histogram Then the approximate histogram is used to calculate approximate quantiles The Approximate greedy algorithm uses these approximate quantiles\nWhat about the weighted part?\nUsually, quantiles are set up so that the same number of observations are in each one\nIn contrast, with weighted quantiles, each observation has a corresponding weight The sum of the weights are the same in each quantile The weights are derived from the cover metric the weight for each observation is the 2nd derivative of the loss function, what we are referring to as the Hessian (not Gradient) This means for regression the weights are all equal to 1 This means that the the weighted quantiles are just like normal quantiles and contain an equal number of observations In constrast, for classification: weight = previous prob i * (1- previous prob i) Only uses the approx greedy algo, parallel learning and the weighted quantile sketch then the training data is huge\nWhen the trainin set is not so large, a normal greedy algo is used\nSparsity-Aware Split Finding Have a few missing values\nEven with this, we can just use the base leaf to calculate the residuals for rows with missing data split the data into two table\none with all e.g. dosage values other with all values without dosage values Table with dosage values:\nsort rows low to high calc candidate thresholds The first gain value, gain left, is calculated by putting all of the resdiuals with missing dosage values into the leaf on the left, save gain Do the same for leaf on the right, save gain\nDo this for all candidate thresholds You then pick the tree with highest gain\nSo example, Dosage \u0026lt; 15.5, going left will be the default path for all future observations that are missing dosage values\nCache-Aware Access This is where XGBoost starts to get super nitty gritty\nBasic idea:\nInside computer we have: CPU CPU has a small amount of cache memory \u0026ndash; CPU can use this mem faster than any other memory on the computer CPU attatched to large amount of main memory, larger but slower than cache HDD, very slow but largest XGBoost puts the gradients and Hessians in the cache, so that is can rapdily calculate similarity scores and output scores\nBlocks for Out-of-Core Computation When the dataset is too large for the cache and main memory, then some of it must be stored on the HDD\nBecause reading and writing data to the HDD is super slow, XGBoost tries minimising these actions by compressing the data\nWhen there is more than one HDD, XGBoost uses a databse technique called sharding to speed up disk access\nThe when the CPU needs data, both drives can be reading data at the same time Finally, XGHBoost can speed things up by allowing you to build each tree with only a random subset of the data.\nAND, can build trees by only looking at a random subset of features when deciding how to split the data.\n","permalink":"https://www.okwilkins.dev/knowledge-system/projects/ml-ai/","section":"knowledge-system","tags":[],"title":"Ml \u0026 Ai","zettelcastenIndex":"20230215230508","zettelcastenTags":["Data Science"]},{"contents":" Bulgarian 0 нула 1 един (m), една (f), едно (n) 2 два (m), две (n/f) 3 три 4 четири 5 пет 6 шест 7 седем 8 осем 9 девет 10 десет References ","permalink":"https://www.okwilkins.dev/knowledge-system/slip-box/bulgarian-counting-to-10/","section":"knowledge-system","tags":[],"title":"Bulgarian Counting To 10","zettelcastenIndex":"20230215182940","zettelcastenTags":["Language","Bulgarian"]},{"contents":"Some masculine words have specials rules, taking a different plural ending. This happens when these words follow a number or expressions such as колко (how many?) or няколко (a few). In these cases, they will end with -a.\n\u0026ldquo;един месец\u0026rdquo; - one month\n\u0026ldquo;два месеца\u0026rdquo; - two months\n\u0026ldquo;един ден\u0026rdquo; - one day\n\u0026ldquo;няколко дена*\u0026rdquo; - a few days\nThis is called the numeral plural or counting form (бройна форма). This only applies to masculine nouns that do not represent people.\nBulgarians often use \u0026ldquo;дни\u0026rdquo;, the normal plural, instead of \u0026ldquo;дена\u0026rdquo;, the numeral plural. Therefore we\u0026rsquo;ll consider both \u0026ldquo;два дена\u0026rdquo; and \u0026ldquo;два дни\u0026rdquo; as correct. \u0026ldquo;Дни\u0026rdquo; is much more commonly heard, despite \u0026ldquo;дена\u0026rdquo; being the grammatically correct version. References ","permalink":"https://www.okwilkins.dev/knowledge-system/slip-box/numeral-plural/","section":"knowledge-system","tags":[],"title":"Numeral Plural","zettelcastenIndex":"20230215182940-a","zettelcastenTags":["Language","Bulgarian"]},{"contents":"Asking a closed question (one that can be answered with yes or no) is quite simple.\nUse the ли particle, usually added after the verb With the verb to be (съм) in the present tense, it is placed before Examples:\nИма ли котка? - Is there a cat? Имаш ли куче? - Do you have a dog? Момче ли си? - Are you a boy? References ","permalink":"https://www.okwilkins.dev/knowledge-system/slip-box/bulgarian-closed-questions/","section":"knowledge-system","tags":[],"title":"Bulgarian Closed Questions","zettelcastenIndex":"20230215182805","zettelcastenTags":["Language","Bulgarian","Verb"]},{"contents":"The 3rd person singular of имам is also used to mean \u0026rsquo;there is\u0026rsquo;. Unlike English it remains singular even when followed by a plural:\nИма котка - There is a cat Има много котки - There are many cats Няма котки - There are no cats References ","permalink":"https://www.okwilkins.dev/knowledge-system/slip-box/bulgarian-there-is/","section":"knowledge-system","tags":[],"title":"Bulgarian There Is","zettelcastenIndex":"20230215182636","zettelcastenTags":["Language","Bulgarian","Verb"]},{"contents":"To Have Or Not To Have Имам is the verb \u0026rsquo;to have' Usually a verb can be negated using the не particle In the case of имам there is a specific verb: нямам Имам котка - I have a cat Иямам котка - I don\u0026rsquo;t have a cat Conjugation of both verbs at the present tense:\nимам нямам I аз имам нямам you ти имаш нямаш he/she/it той/тя/то има няма we ние имаме нямаме you вие имате нямате they те имат нямат This is the standard example of conjugation of verbs of the 3rd group. These are verbs that end in -ам, such as харесвам (to like) and искам (to want). The conjugation of these two and many others can be done in the same way:\nхаресвам искам I аз харесвам искам you ти харесваш искаш he/she/it той/тя/то харесва иска we ние харесваме искаме you вие харесвате искате they те харесват искат References ","permalink":"https://www.okwilkins.dev/knowledge-system/slip-box/bulgarian-to-have-or-not-to-have/","section":"knowledge-system","tags":[],"title":"Bulgarian To Have Or Not To Have","zettelcastenIndex":"20230215182343","zettelcastenTags":["Language","Bulgarian","Verb","Bulgarian Conjugation"]},{"contents":" I am аз съм you are (familliar person) ти си he/she/it is той/тя/то е we are ние сме you are (talking to a group or one person to be formal) вие сте they are те са References ","permalink":"https://www.okwilkins.dev/knowledge-system/slip-box/bulgarian-to-be/","section":"knowledge-system","tags":[],"title":"Bulgarian To Be","zettelcastenIndex":"20230215182239","zettelcastenTags":["Language","Bulgarian","Verb"]},{"contents":"Masculine - Words ending in a consonant (including й) (e.g. мъж) Feminine - Words ending in -а or -я (e.g. жена) Neutral - Words ending in -о or -е (e.g. куче)\nWords ending in -и, -у, -ю are generally loan words (often coming from English) and are usually neutral\nменю такси Plurals Gender Ending Plural Masculine ‑consonant +и or +ове Feminine ‑а or ‑я ‑и Neutral ‑о or ‑е ‑a or +та Masculine Words и is added to words that have one syllable ове is added to words with more than one syllable Examples: Приятел - Приятели Град - Градове Мъж - Мъже (an exception) Feminine Words The final -а or -я is replaced with и\nЖена - Жени Стая - Стаи Neutral Words The final о is replaced by а The final e and for loan words, an extra та is added to the end: Село - Села Кафе - Кафета Такси - Таксита References ","permalink":"https://www.okwilkins.dev/knowledge-system/slip-box/bulgarian-grammatical-gender/","section":"knowledge-system","tags":[],"title":"Bulgarian Grammatical Gender","zettelcastenIndex":"20230215181956","zettelcastenTags":["Language","Bulgarian"]},{"contents":"Negation \u0026ldquo;Не\u0026rdquo; means no and it can be used to negate a sentence:\n\u0026ldquo;Ана не е мъж\u0026rdquo; - Ana is not a man References ","permalink":"https://www.okwilkins.dev/knowledge-system/slip-box/bulgarian-negation/","section":"knowledge-system","tags":[],"title":"Bulgarian Negation","zettelcastenIndex":"20230215181747","zettelcastenTags":["Language","Bulgarian"]},{"contents":"An indefinite article refers to non-specific nouns. You could say:\nI need a pen.\nI want an orange.\nIn both cases, this does not refer to a specific pen or orange. Any will do.\nReferences ","permalink":"https://www.okwilkins.dev/knowledge-system/slip-box/indefinite-article/","section":"knowledge-system","tags":[],"title":"Indefinite Article","zettelcastenIndex":"20230130212938","zettelcastenTags":["Language"]},{"contents":"A verb can be conjugated with reference to the number, person, mood or tense. Examples:\nI teach English We teach English You teach English He teaches English She teaches English They teach English References ","permalink":"https://www.okwilkins.dev/knowledge-system/slip-box/conjugation/","section":"knowledge-system","tags":[],"title":"Conjugation","zettelcastenIndex":"20230129220508","zettelcastenTags":["Language","Verb"]},{"contents":"In Bulgarian, citation form is used to refer to a verb or to look it up in a dictionary. It is different from the infinitive in a grammatical sense.\nFor example:\n\u0026ldquo;to be\u0026rdquo; is \u0026ldquo;съм\u0026rdquo; Съм is used for the citation form and for \u0026ldquo;I am\u0026rdquo; References ","permalink":"https://www.okwilkins.dev/knowledge-system/slip-box/citation-form/","section":"knowledge-system","tags":[],"title":"Citation Form","zettelcastenIndex":"20230129220329","zettelcastenTags":["Language","Bulgarian","Verb"]},{"contents":"An adverb is a word that modifies a verb (he sings loudly), an adjective (very tall), another adverb or even a whole sentence (fortunately, I had brought an umbrella).\nReferences ","permalink":"https://www.okwilkins.dev/knowledge-system/slip-box/adverb/","section":"knowledge-system","tags":[],"title":"Adverb","zettelcastenIndex":"20230129214603","zettelcastenTags":["Language","Verb","Adjective"]},{"contents":"Infinitives are a special form of verbs that can be used as a noun, adjective or adverb. They are usually made by adding the word to before the base verb. They are useful when discussion actions without actually doing the action:\nI want to go home. I like to write in English. Example:\nI need to win. Today, we win. In the first sentence, the infinitive form of the verb win is used. The main verb of the sentence is actually \u0026ldquo;need\u0026rdquo;. The second sentence uses the standard form of win as an actionable verb. In he first sentence with the infinitive, the action of \u0026ldquo;winning\u0026rdquo; is not actually done. The sentence simply discusses the idea of winning. The second sentence however, describes the action of winning.\nReferences ","permalink":"https://www.okwilkins.dev/knowledge-system/slip-box/infinitive/","section":"knowledge-system","tags":[],"title":"Infinitive","zettelcastenIndex":"20230129214114-a","zettelcastenTags":["Language","Verb"]},{"contents":"A verb is a word that describes what the subject of the sentence is doing. They can indicate (physical or mental) actions, occurrences and states of being.\nJeff builds a house.\nAnita is thinking about horses.\nTrue love exists.\nReferences ","permalink":"https://www.okwilkins.dev/knowledge-system/slip-box/verb/","section":"knowledge-system","tags":[],"title":"Verb","zettelcastenIndex":"20230129214114","zettelcastenTags":["Language"]},{"contents":"In Bulgarian verbs are conjugated according to the subject (I, you, \u0026hellip;) and the tense (past, present, \u0026hellip;). This conjugation is applied to the ending of the verb.\nReferences ","permalink":"https://www.okwilkins.dev/knowledge-system/slip-box/bulgarian-conjugation/","section":"knowledge-system","tags":[],"title":"Bulgarian Conjugation","zettelcastenIndex":"20230129213905","zettelcastenTags":["Language","Bulgarian","Verb","Conjugation"]},{"contents":"It is a rule that you cannot start a sentence with a present form of the verb съм (\u0026ldquo;to be\u0026rdquo;). When you omit the subject personal pronoun, the verb has to move into the second position:\n\u0026ldquo;Аз съм мъж\u0026rdquo; or \u0026ldquo;Мъж съм\u0026rdquo; – I am a man It is incorrect to say: \u0026ldquo;съм мъж\u0026rdquo;\nReferences ","permalink":"https://www.okwilkins.dev/knowledge-system/slip-box/bulgarian-starting-sentences-with-a-present-form/","section":"knowledge-system","tags":[],"title":"Bulgarian Starting Sentences With A Present Form","zettelcastenIndex":"20230129213905-a1","zettelcastenTags":["Language","Bulgarian"]},{"contents":"Verbs do not have an infinitive form. When referring to a verb, use the first person conjugation of that verb. Here are examples Bulgarian the citation form \u0026ldquo;to be\u0026rdquo;.\nExample:\n\u0026ldquo;to be\u0026rdquo; is \u0026ldquo;съм\u0026rdquo; Съм is used for the citation form and for \u0026ldquo;I am\u0026rdquo; Two conjugations of \u0026ldquo;съм\u0026rdquo;:\nI am - Аз съм he/she/it is - той/тя/то е Examples:\n\u0026ldquo;Той е мъж\u0026rdquo; - He is a man \u0026ldquo;Тя е жена\u0026rdquo; - She is a woman \u0026ldquo;Това е куче\u0026rdquo; - This is a dog Since the conjugations are unique to each subject, the pronoun can be left out:\nInstead of \u0026ldquo;аз съм мъж\u0026rdquo; (I am a man), you can say \u0026ldquo;мъж съм\u0026rdquo; References ","permalink":"https://www.okwilkins.dev/knowledge-system/slip-box/bulgarian-verbs/","section":"knowledge-system","tags":[],"title":"Bulgarian Verbs","zettelcastenIndex":"20230129213905-a","zettelcastenTags":["Language","Bulgarian","Verb","Conjugation","Citation Form"]},{"contents":"In English there are 2 types of articles:\nDefinite Indefinite There is no definite article in Bulgarian: \u0026ldquo;жена\u0026rdquo; and \u0026ldquo;куче\u0026rdquo; are used alone to refer to \u0026ldquo;a woman\u0026rdquo; and \u0026ldquo;a dog\u0026rdquo;: \u0026ldquo;Ту е жена\u0026rdquo; - She is a woman \u0026ldquo;Аз имам куче\u0026rdquo; - I have a dog References ","permalink":"https://www.okwilkins.dev/knowledge-system/slip-box/bulgarian-articles/","section":"knowledge-system","tags":[],"title":"Bulgarian Articles","zettelcastenIndex":"20230129211820","zettelcastenTags":["Language","Bulgarian","Definite Article","Indefinite Article"]},{"contents":"Adjectives are words that describe the qualities or states of being of nouns. Examples:\nRob wore a beautiful hat.\nFurry dogs may overhead in the summertime.\nMy cake should have sixteen candles.\nThe scariest villain of all time is Darth Vader.\nReferences ","permalink":"https://www.okwilkins.dev/knowledge-system/slip-box/adjective/","section":"knowledge-system","tags":[],"title":"Adjective","zettelcastenIndex":"20230129210911-b","zettelcastenTags":["Language","Noun"]},{"contents":"A noun is a word that refers to a person, place, thing or idea.\nReferences ","permalink":"https://www.okwilkins.dev/knowledge-system/slip-box/noun/","section":"knowledge-system","tags":[],"title":"Noun","zettelcastenIndex":"20230129210911","zettelcastenTags":["Language"]},{"contents":"A pronoun is a word that stands in a for noun, often to avoid the need to repeat the same noun over and over. Use this when your reader/listener already knows which nouns you are referring to.\nExample:\nI have a dog. He\u0026rsquo;s brown and white. References ","permalink":"https://www.okwilkins.dev/knowledge-system/slip-box/pronoun/","section":"knowledge-system","tags":[],"title":"Pronoun","zettelcastenIndex":"20230129210911-a","zettelcastenTags":["Language","Noun"]},{"contents":"A definite article refers to a specific noun. You could say:\nThe man\u0026rsquo;s dog barked at me.\nI lent my sister the book when I finished reading it.\nI didn\u0026rsquo;t go to the the party.\nReferences ","permalink":"https://www.okwilkins.dev/knowledge-system/slip-box/definite-article/","section":"knowledge-system","tags":[],"title":"Definite Article","zettelcastenIndex":"20230129210906","zettelcastenTags":["Language"]},{"contents":"This Is My First Post! ","permalink":"https://www.okwilkins.dev/posts/test-post/","section":"posts","tags":[],"title":"Test Post","zettelcastenIndex":null,"zettelcastenTags":null},{"contents":"Bulgarian Animals Exceptions Bulgarian Animals Masculine Plurals Bulgarian Spider Plural Bulgarian Animals Bulgarian Articles Bulgarian Closed Questions Bulgarian Conjugation Bulgarian Counting To 10 Bulgarian Definite Articles Bulgarian Generalising Statements Bulgarian Grammatical Gender Bulgarian Masculine Definite Articles Bulgarian Negation Bulgarian Starting Sentences with a Present Form Bulgarian There Is Bulgarian To Be Bulgarian To Have Or Not To Have Bulgarian Verbs Citation Form Numeral Plural\n","permalink":"https://www.okwilkins.dev/knowledge-system/map-of-content/bulgarian/","section":"knowledge-system","tags":[],"title":"Bulgarian","zettelcastenIndex":"","zettelcastenTags":["Map of Content","Language"]},{"contents":"Decision Trees Machine Learning Bias Machine Learning Variance\n","permalink":"https://www.okwilkins.dev/knowledge-system/map-of-content/data-science/","section":"knowledge-system","tags":[],"title":"Data Science","zettelcastenIndex":"","zettelcastenTags":["Map of Content"]},{"contents":"Bulgarian Animals Exceptions Bulgarian Animals Masculine Plurals Bulgarian Spider Plural Bulgarian Adjective Adverb Bulgarian Animals Bulgarian Articles Bulgarian Closed Questions Bulgarian Conjugation Bulgarian Counting To 10 Bulgarian Definite Articles Bulgarian Generalising Statements Bulgarian Grammatical Gender Bulgarian Masculine Definite Articles Bulgarian Negation Bulgarian Starting Sentences with a Present Form Bulgarian There Is Bulgarian To Be Bulgarian To Have Or Not To Have Citation Form Conjugation Definite Article Indefinite Article Infinitive Noun Numeral Plural Pronoun Verb\n","permalink":"https://www.okwilkins.dev/knowledge-system/map-of-content/language/","section":"knowledge-system","tags":[],"title":"Language","zettelcastenIndex":"","zettelcastenTags":["Map of Content"]},{"contents":" Bulgarian Data Science Language Programming ","permalink":"https://www.okwilkins.dev/knowledge-system/map-of-content/map-of-content/","section":"knowledge-system","tags":[],"title":"Map Of Content","zettelcastenIndex":"","zettelcastenTags":[]},{"contents":"About Mermaid \u0026ldquo;About Mermaid\u0026rdquo;, MermaidJS, 2023-02-27, https://mermaid.js.org/intro/ Flowcharts \u0026ldquo;Flowcharts - Basic Syntax\u0026rdquo;, MermaidJS, 2023-02-27, https://mermaid.js.org/syntax/flowchart.html Sequence Diagrams \u0026ldquo;Sequence diagrams\u0026rdquo;, MermaidJS, 2023-02-27, https://mermaid.js.org/syntax/sequenceDiagram.html Class Diagrams \u0026ldquo;Class diagrams\u0026rdquo;, MermaidJS, 2023-02-27, https://mermaid.js.org/syntax/classDiagram.html State Diagrams \u0026ldquo;State diagrams\u0026rdquo;, MermaidJS, 2023-02-27, https://mermaid.js.org/syntax/stateDiagram.html Entity Relationship Diagrams \u0026ldquo;Entity Relationship Diagrams\u0026rdquo;, MermaidJS, 2023-02-27, https://mermaid.js.org/syntax/entityRelationshipDiagram.html User Journey Diagrams \u0026ldquo;User Journey Diagram\u0026rdquo;, MermaidJS, 2023-02-27, https://mermaid.js.org/syntax/userJourney.html Gantt Charts \u0026ldquo;Gantt diagrams\u0026rdquo;, MermaidJS, 2023-02-27, https://mermaid.js.org/syntax/gantt.html Pie Charts \u0026ldquo;Pie chart diagrams\u0026rdquo;, MermaidJS, 2023-02-27, https://mermaid.js.org/syntax/pie.html Gitgraph Diagrams \u0026ldquo;Gitgraph Diagrams\u0026rdquo;, MermaidJS, 2023-02-27, https://mermaid.js.org/syntax/gitgraph.html Mindmap \u0026ldquo;Mindmap\u0026rdquo;, MermaidJS, 2023-02-27, https://mermaid.js.org/syntax/mindmap.html Timeline Diagrams \u0026ldquo;Timeline Diagram\u0026rdquo;, MermaidJS, 2023-02-27, https://mermaid.js.org/syntax/timeline.html ","permalink":"https://www.okwilkins.dev/knowledge-system/references/mermaid/","section":"knowledge-system","tags":[],"title":"Mermaid","zettelcastenIndex":"","zettelcastenTags":[]},{"contents":"Mermaid Class Diagram Mermaid Entity Relationship Diagram Mermaid Gitgraph Diagram\n","permalink":"https://www.okwilkins.dev/knowledge-system/map-of-content/programming/","section":"knowledge-system","tags":[],"title":"Programming","zettelcastenIndex":"","zettelcastenTags":["Map of Content"]},{"contents":"Bias \u0026ldquo;Bias and Variance\u0026rdquo;, Youtube, StatQuest with Josh Starmer, 2023-02-27, https://youtu.be/EuBBz3bI-aA?t=29 Variance \u0026ldquo;Bias and Variance\u0026rdquo;, Youtube, StatQuest with Josh Starmer, 2023-02-27, https://youtu.be/EuBBz3bI-aA?t=246 Decision Trees \u0026ldquo;Decision and Classification Trees, Clearly Explained!!!\u0026rdquo;, Youtube, StatQuest with Josh Starmer, 2023-02-27, https://www.youtube.com/watch?v=_L39rN6gz7Y \u0026ldquo;Regression Trees, Clearly Explained!!!\u0026rdquo;, Youtube, StatQuest with Josh Starmer, 2023-02-27, https://www.youtube.com/watch?v=g9c66TUylZ4 \u0026ldquo;How to Prune Regression Trees, Clearly Explained!!!\u0026rdquo; Youtube, StatQuest with Josh Starmer, 2023-02-27, https://www.youtube.com/watch?v=D0efHEJsfHo ","permalink":"https://www.okwilkins.dev/knowledge-system/references/statquest-with-josh-starmer/","section":"knowledge-system","tags":[],"title":"Statquest With Josh Starmer","zettelcastenIndex":"","zettelcastenTags":[]}]